{"ast":null,"code":"import { ɵgetAllInstancesOf, ɵisAnalyticsSupportedFactory, ɵzoneWrap, VERSION, ɵgetDefaultInstanceOf, ɵAngularFireSchedulers } from '@angular/fire';\nimport { timer, from, of } from 'rxjs';\nimport { concatMap, distinct, filter, switchMap, map, groupBy, mergeMap, distinctUntilChanged, startWith, pairwise } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, InjectionToken, APP_INITIALIZER, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { __awaiter } from 'tslib';\nimport * as i1$1 from '@angular/router';\nimport { ActivationEnd, ɵEmptyOutletComponent } from '@angular/router';\nimport * as i2 from '@angular/platform-browser';\nimport { getAnalytics as getAnalytics$1, initializeAnalytics as initializeAnalytics$1, logEvent as logEvent$1, setAnalyticsCollectionEnabled as setAnalyticsCollectionEnabled$1, setCurrentScreen as setCurrentScreen$1, settings as settings$1, setUserId as setUserId$1, setUserProperties as setUserProperties$1 } from 'firebase/analytics';\nexport * from 'firebase/analytics';\nimport * as i1 from '@angular/fire/auth';\nimport { authState } from '@angular/fire/auth';\n\nclass Analytics {\n  constructor(analytics) {\n    return analytics;\n  }\n\n}\n\nconst ANALYTICS_PROVIDER_NAME = 'analytics';\n\nclass AnalyticsInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME);\n  }\n\n}\n\nconst analyticInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME))), distinct());\nconst isSupported = ɵisAnalyticsSupportedFactory.async; // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\nconst getAnalytics = ɵzoneWrap(getAnalytics$1, true);\nconst initializeAnalytics = ɵzoneWrap(initializeAnalytics$1, true);\nconst logEvent = ɵzoneWrap(logEvent$1, true);\nconst setAnalyticsCollectionEnabled = ɵzoneWrap(setAnalyticsCollectionEnabled$1, true);\nconst setCurrentScreen = ɵzoneWrap(setCurrentScreen$1, true);\nconst settings = ɵzoneWrap(settings$1, true);\nconst setUserId = ɵzoneWrap(setUserId$1, true);\nconst setUserProperties = ɵzoneWrap(setUserProperties$1, true);\n\nclass UserTrackingService {\n  constructor(auth, zone, injector) {\n    this.disposables = [];\n    registerVersion('angularfire', VERSION.full, 'user-tracking');\n    let resolveInitialized;\n    this.initialized = zone.runOutsideAngular(() => new Promise(resolve => {\n      resolveInitialized = resolve;\n    })); // The APP_INITIALIZER that is making isSupported() sync for the sake of convenient DI\n    // may not be done when services are initialized. Guard the functionality by first ensuring\n    // that the (global) promise has resolved, then get Analytics from the injector.\n\n    isSupported().then(() => {\n      const analytics = injector.get(Analytics);\n\n      if (analytics) {\n        this.disposables = [// TODO add credential tracking back in\n        authState(auth).subscribe(user => {\n          setUserId(analytics, user === null || user === void 0 ? void 0 : user.uid);\n          resolveInitialized();\n        })];\n      } else {\n        resolveInitialized();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.disposables.forEach(it => it.unsubscribe());\n  }\n\n}\n\nUserTrackingService.ɵfac = function UserTrackingService_Factory(t) {\n  return new (t || UserTrackingService)(i0.ɵɵinject(i1.Auth), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i0.Injector));\n};\n\nUserTrackingService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UserTrackingService,\n  factory: UserTrackingService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserTrackingService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Auth\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\n\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY = 'firebase_previous_id';\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\nconst OUTLET_KEY = 'outlet';\nconst PAGE_PATH_KEY = 'page_path';\nconst PAGE_TITLE_KEY = 'page_title';\nconst SCREEN_CLASS_KEY = 'screen_class';\nconst SCREEN_NAME_KEY = 'screen_name';\nconst SCREEN_VIEW_EVENT = 'screen_view';\nconst EVENT_ORIGIN_AUTO = 'auto';\nconst SCREEN_INSTANCE_DELIMITER = '#'; // this is an INT64 in iOS/Android but use INT32 cause javascript\n\nlet nextScreenInstanceID = Math.floor(Math.random() * (Math.pow(2, 32) - 1)) - Math.pow(2, 31);\nconst knownScreenInstanceIDs = {};\n\nconst getScreenInstanceID = params => {\n  // unique the screen class against the outlet name\n  const screenInstanceKey = [params[SCREEN_CLASS_KEY], params[OUTLET_KEY]].join(SCREEN_INSTANCE_DELIMITER);\n\n  if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\n    return knownScreenInstanceIDs[screenInstanceKey];\n  } else {\n    const ret = nextScreenInstanceID++;\n    knownScreenInstanceIDs[screenInstanceKey] = ret;\n    return ret;\n  }\n};\n\nconst ɵscreenViewEvent = (router, title, componentFactoryResolver) => {\n  const activationEndEvents = router.events.pipe(filter(e => e instanceof ActivationEnd));\n  return activationEndEvents.pipe(switchMap(activationEnd => {\n    var _a; // router parseUrl is having trouble with outlets when they're empty\n    // e.g, /asdf/1(bob://sally:asdf), so put another slash in when empty\n\n\n    const urlTree = router.parseUrl(router.url.replace(/(?:\\().+(?:\\))/g, a => a.replace('://', ':///')));\n    const pagePath = ((_a = urlTree.root.children[activationEnd.snapshot.outlet]) === null || _a === void 0 ? void 0 : _a.toString()) || '';\n    const actualSnapshot = router.routerState.root.children.map(it => it).find(it => it.outlet === activationEnd.snapshot.outlet);\n\n    if (!actualSnapshot) {\n      return of(null);\n    }\n\n    let actualDeep = actualSnapshot;\n\n    while (actualDeep.firstChild) {\n      actualDeep = actualDeep.firstChild;\n    }\n\n    const screenName = actualDeep.pathFromRoot.map(s => {\n      var _a;\n\n      return (_a = s.routeConfig) === null || _a === void 0 ? void 0 : _a.path;\n    }).filter(it => it).join('/') || '/';\n    const params = {\n      [SCREEN_NAME_KEY]: screenName,\n      [PAGE_PATH_KEY]: `/${pagePath}`,\n      [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\n      [FIREBASE_SCREEN_NAME_KEY]: screenName,\n      [OUTLET_KEY]: activationEnd.snapshot.outlet\n    };\n\n    if (title) {\n      params[PAGE_TITLE_KEY] = title.getTitle();\n    }\n\n    let component = actualSnapshot.component;\n\n    if (component) {\n      if (component === ɵEmptyOutletComponent) {\n        let deepSnapshot = activationEnd.snapshot; // TODO when might there be mutple children, different outlets? explore\n\n        while (deepSnapshot.firstChild) {\n          deepSnapshot = deepSnapshot.firstChild;\n        }\n\n        component = deepSnapshot.component;\n      }\n    } else {\n      component = activationEnd.snapshot.component;\n    }\n\n    if (typeof component === 'string') {\n      return of(Object.assign(Object.assign({}, params), {\n        [SCREEN_CLASS_KEY]: component\n      }));\n    } else if (component) {\n      const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n      return of(Object.assign(Object.assign({}, params), {\n        [SCREEN_CLASS_KEY]: componentFactory.selector\n      }));\n    } // lazy loads cause extra activations, ignore\n\n\n    return of(null);\n  }), filter(it => !!it), map(params => Object.assign({\n    [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY],\n    [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params)\n  }, params)), groupBy(it => it[OUTLET_KEY]), mergeMap(it => it.pipe(distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)), startWith(undefined), pairwise(), map(([prior, current]) => prior ? Object.assign({\n    [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY],\n    [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY],\n    [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY]\n  }, current) : current))));\n};\n\nclass ScreenTrackingService {\n  constructor(router, title, componentFactoryResolver, zone, userTrackingService, injector) {\n    registerVersion('angularfire', VERSION.full, 'screen-tracking'); // The APP_INITIALIZER that is making isSupported() sync for the sake of convenient DI\n    // may not be done when services are initialized. Guard the functionality by first ensuring\n    // that the (global) promise has resolved, then get Analytics from the injector.\n\n    isSupported().then(() => {\n      const analytics = injector.get(Analytics);\n\n      if (!router || !analytics) {\n        return;\n      }\n\n      zone.runOutsideAngular(() => {\n        this.disposable = ɵscreenViewEvent(router, title, componentFactoryResolver).pipe(switchMap(params => __awaiter(this, void 0, void 0, function* () {\n          if (userTrackingService) {\n            yield userTrackingService.initialized;\n          }\n\n          return logEvent(analytics, SCREEN_VIEW_EVENT, params);\n        }))).subscribe();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.disposable) {\n      this.disposable.unsubscribe();\n    }\n  }\n\n}\n\nScreenTrackingService.ɵfac = function ScreenTrackingService_Factory(t) {\n  return new (t || ScreenTrackingService)(i0.ɵɵinject(i1$1.Router, 8), i0.ɵɵinject(i2.Title, 8), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(UserTrackingService, 8), i0.ɵɵinject(i0.Injector));\n};\n\nScreenTrackingService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScreenTrackingService,\n  factory: ScreenTrackingService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScreenTrackingService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Router,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.Title,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.NgZone\n    }, {\n      type: UserTrackingService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\n\nconst PROVIDED_ANALYTICS_INSTANCES = new InjectionToken('angularfire2.analytics-instances');\n\nfunction defaultAnalyticsInstanceFactory(provided, defaultApp) {\n  if (!ɵisAnalyticsSupportedFactory.sync()) {\n    return null;\n  }\n\n  const defaultAnalytics = ɵgetDefaultInstanceOf(ANALYTICS_PROVIDER_NAME, provided, defaultApp);\n  return defaultAnalytics && new Analytics(defaultAnalytics);\n}\n\nfunction analyticsInstanceFactory(fn) {\n  return (zone, injector) => {\n    if (!ɵisAnalyticsSupportedFactory.sync()) {\n      return null;\n    }\n\n    const analytics = zone.runOutsideAngular(() => fn(injector));\n    return new Analytics(analytics);\n  };\n}\n\nconst ANALYTICS_INSTANCES_PROVIDER = {\n  provide: AnalyticsInstances,\n  deps: [[new Optional(), PROVIDED_ANALYTICS_INSTANCES]]\n};\nconst DEFAULT_ANALYTICS_INSTANCE_PROVIDER = {\n  provide: Analytics,\n  useFactory: defaultAnalyticsInstanceFactory,\n  deps: [[new Optional(), PROVIDED_ANALYTICS_INSTANCES], FirebaseApp]\n};\n\nclass AnalyticsModule {\n  constructor(_screenTrackingService, _userTrackingService) {\n    registerVersion('angularfire', VERSION.full, 'analytics');\n  }\n\n}\n\nAnalyticsModule.ɵfac = function AnalyticsModule_Factory(t) {\n  return new (t || AnalyticsModule)(i0.ɵɵinject(ScreenTrackingService, 8), i0.ɵɵinject(UserTrackingService, 8));\n};\n\nAnalyticsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AnalyticsModule\n});\nAnalyticsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DEFAULT_ANALYTICS_INSTANCE_PROVIDER, ANALYTICS_INSTANCES_PROVIDER, {\n    provide: APP_INITIALIZER,\n    useValue: ɵisAnalyticsSupportedFactory.async,\n    multi: true\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnalyticsModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_ANALYTICS_INSTANCE_PROVIDER, ANALYTICS_INSTANCES_PROVIDER, {\n        provide: APP_INITIALIZER,\n        useValue: ɵisAnalyticsSupportedFactory.async,\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: ScreenTrackingService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: UserTrackingService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nfunction provideAnalytics(fn, ...deps) {\n  return {\n    ngModule: AnalyticsModule,\n    providers: [{\n      provide: PROVIDED_ANALYTICS_INSTANCES,\n      useFactory: analyticsInstanceFactory(fn),\n      multi: true,\n      deps: [NgZone, Injector, ɵAngularFireSchedulers, FirebaseApps, ...deps]\n    }]\n  };\n}\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { Analytics, AnalyticsInstances, AnalyticsModule, ScreenTrackingService, UserTrackingService, analyticInstance$, getAnalytics, initializeAnalytics, isSupported, logEvent, provideAnalytics, setAnalyticsCollectionEnabled, setCurrentScreen, setUserId, setUserProperties, settings, ɵscreenViewEvent };","map":{"version":3,"sources":["D:/Project-2/front-end/codegym-cinema-fe/node_modules/@angular/fire/fesm2015/angular-fire-analytics.js"],"names":["ɵgetAllInstancesOf","ɵisAnalyticsSupportedFactory","ɵzoneWrap","VERSION","ɵgetDefaultInstanceOf","ɵAngularFireSchedulers","timer","from","of","concatMap","distinct","filter","switchMap","map","groupBy","mergeMap","distinctUntilChanged","startWith","pairwise","i0","Injectable","Optional","InjectionToken","APP_INITIALIZER","NgModule","NgZone","Injector","FirebaseApp","FirebaseApps","registerVersion","__awaiter","i1$1","ActivationEnd","ɵEmptyOutletComponent","i2","getAnalytics","getAnalytics$1","initializeAnalytics","initializeAnalytics$1","logEvent","logEvent$1","setAnalyticsCollectionEnabled","setAnalyticsCollectionEnabled$1","setCurrentScreen","setCurrentScreen$1","settings","settings$1","setUserId","setUserId$1","setUserProperties","setUserProperties$1","i1","authState","Analytics","constructor","analytics","ANALYTICS_PROVIDER_NAME","AnalyticsInstances","analyticInstance$","pipe","isSupported","async","UserTrackingService","auth","zone","injector","disposables","full","resolveInitialized","initialized","runOutsideAngular","Promise","resolve","then","get","subscribe","user","uid","ngOnDestroy","forEach","it","unsubscribe","ɵfac","Auth","ɵprov","type","FIREBASE_EVENT_ORIGIN_KEY","FIREBASE_PREVIOUS_SCREEN_CLASS_KEY","FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY","FIREBASE_PREVIOUS_SCREEN_NAME_KEY","FIREBASE_SCREEN_CLASS_KEY","FIREBASE_SCREEN_INSTANCE_ID_KEY","FIREBASE_SCREEN_NAME_KEY","OUTLET_KEY","PAGE_PATH_KEY","PAGE_TITLE_KEY","SCREEN_CLASS_KEY","SCREEN_NAME_KEY","SCREEN_VIEW_EVENT","EVENT_ORIGIN_AUTO","SCREEN_INSTANCE_DELIMITER","nextScreenInstanceID","Math","floor","random","pow","knownScreenInstanceIDs","getScreenInstanceID","params","screenInstanceKey","join","hasOwnProperty","ret","ɵscreenViewEvent","router","title","componentFactoryResolver","activationEndEvents","events","e","activationEnd","_a","urlTree","parseUrl","url","replace","a","pagePath","root","children","snapshot","outlet","toString","actualSnapshot","routerState","find","actualDeep","firstChild","screenName","pathFromRoot","s","routeConfig","path","getTitle","component","deepSnapshot","Object","assign","componentFactory","resolveComponentFactory","selector","b","JSON","stringify","undefined","prior","current","ScreenTrackingService","userTrackingService","disposable","Router","Title","ComponentFactoryResolver","decorators","PROVIDED_ANALYTICS_INSTANCES","defaultAnalyticsInstanceFactory","provided","defaultApp","sync","defaultAnalytics","analyticsInstanceFactory","fn","ANALYTICS_INSTANCES_PROVIDER","provide","deps","DEFAULT_ANALYTICS_INSTANCE_PROVIDER","useFactory","AnalyticsModule","_screenTrackingService","_userTrackingService","ɵmod","ɵinj","useValue","multi","args","providers","provideAnalytics","ngModule"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,4BAA7B,EAA2DC,SAA3D,EAAsEC,OAAtE,EAA+EC,qBAA/E,EAAsGC,sBAAtG,QAAoI,eAApI;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,EAAtB,QAAgC,MAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,SAAtC,EAAiDC,GAAjD,EAAsDC,OAAtD,EAA+DC,QAA/D,EAAyEC,oBAAzE,EAA+FC,SAA/F,EAA0GC,QAA1G,QAA0H,gBAA1H;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,cAA/B,EAA+CC,eAA/C,EAAgEC,QAAhE,EAA0EC,MAA1E,EAAkFC,QAAlF,QAAkG,eAAlG;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,mBAA1C;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,IAAZ,MAAsB,iBAAtB;AACA,SAASC,aAAT,EAAwBC,qBAAxB,QAAqD,iBAArD;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,SAASC,YAAY,IAAIC,cAAzB,EAAyCC,mBAAmB,IAAIC,qBAAhE,EAAuFC,QAAQ,IAAIC,UAAnG,EAA+GC,6BAA6B,IAAIC,+BAAhJ,EAAiLC,gBAAgB,IAAIC,kBAArM,EAAyNC,QAAQ,IAAIC,UAArO,EAAiPC,SAAS,IAAIC,WAA9P,EAA2QC,iBAAiB,IAAIC,mBAAhS,QAA2T,oBAA3T;AACA,cAAc,oBAAd;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,MAAMC,SAAN,CAAgB;AACZC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,WAAOA,SAAP;AACH;;AAHW;;AAKhB,MAAMC,uBAAuB,GAAG,WAAhC;;AACA,MAAMC,kBAAN,CAAyB;AACrBH,EAAAA,WAAW,GAAG;AACV,WAAOtD,kBAAkB,CAACwD,uBAAD,CAAzB;AACH;;AAHoB;;AAKzB,MAAME,iBAAiB,GAAGpD,KAAK,CAAC,CAAD,EAAI,GAAJ,CAAL,CAAcqD,IAAd,CAAmBlD,SAAS,CAAC,MAAMF,IAAI,CAACP,kBAAkB,CAACwD,uBAAD,CAAnB,CAAX,CAA5B,EAAuF9C,QAAQ,EAA/F,CAA1B;AAEA,MAAMkD,WAAW,GAAG3D,4BAA4B,CAAC4D,KAAjD,C,CAEA;;AACA,MAAM1B,YAAY,GAAGjC,SAAS,CAACkC,cAAD,EAAiB,IAAjB,CAA9B;AACA,MAAMC,mBAAmB,GAAGnC,SAAS,CAACoC,qBAAD,EAAwB,IAAxB,CAArC;AACA,MAAMC,QAAQ,GAAGrC,SAAS,CAACsC,UAAD,EAAa,IAAb,CAA1B;AACA,MAAMC,6BAA6B,GAAGvC,SAAS,CAACwC,+BAAD,EAAkC,IAAlC,CAA/C;AACA,MAAMC,gBAAgB,GAAGzC,SAAS,CAAC0C,kBAAD,EAAqB,IAArB,CAAlC;AACA,MAAMC,QAAQ,GAAG3C,SAAS,CAAC4C,UAAD,EAAa,IAAb,CAA1B;AACA,MAAMC,SAAS,GAAG7C,SAAS,CAAC8C,WAAD,EAAc,IAAd,CAA3B;AACA,MAAMC,iBAAiB,GAAG/C,SAAS,CAACgD,mBAAD,EAAsB,IAAtB,CAAnC;;AAEA,MAAMY,mBAAN,CAA0B;AACtBR,EAAAA,WAAW,CAACS,IAAD,EAAOC,IAAP,EAAaC,QAAb,EAAuB;AAC9B,SAAKC,WAAL,GAAmB,EAAnB;AACArC,IAAAA,eAAe,CAAC,aAAD,EAAgB1B,OAAO,CAACgE,IAAxB,EAA8B,eAA9B,CAAf;AACA,QAAIC,kBAAJ;AACA,SAAKC,WAAL,GAAmBL,IAAI,CAACM,iBAAL,CAAuB,MAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAAEJ,MAAAA,kBAAkB,GAAGI,OAArB;AAA+B,KAAxD,CAA7B,CAAnB,CAJ8B,CAK9B;AACA;AACA;;AACAZ,IAAAA,WAAW,GAAGa,IAAd,CAAmB,MAAM;AACrB,YAAMlB,SAAS,GAAGU,QAAQ,CAACS,GAAT,CAAarB,SAAb,CAAlB;;AACA,UAAIE,SAAJ,EAAe;AACX,aAAKW,WAAL,GAAmB,CACf;AACAd,QAAAA,SAAS,CAACW,IAAD,CAAT,CAAgBY,SAAhB,CAA0BC,IAAI,IAAI;AAC9B7B,UAAAA,SAAS,CAACQ,SAAD,EAAYqB,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACC,GAA7D,CAAT;AACAT,UAAAA,kBAAkB;AACrB,SAHD,CAFe,CAAnB;AAOH,OARD,MASK;AACDA,QAAAA,kBAAkB;AACrB;AACJ,KAdD;AAeH;;AACDU,EAAAA,WAAW,GAAG;AACV,SAAKZ,WAAL,CAAiBa,OAAjB,CAAyBC,EAAE,IAAIA,EAAE,CAACC,WAAH,EAA/B;AACH;;AA3BqB;;AA6B1BnB,mBAAmB,CAACoB,IAApB;AAAA,mBAAgHpB,mBAAhH,EAAsG3C,EAAtG,UAAqJgC,EAAE,CAACgC,IAAxJ,GAAsGhE,EAAtG,UAAyKA,EAAE,CAACM,MAA5K,GAAsGN,EAAtG,UAA+LA,EAAE,CAACO,QAAlM;AAAA;;AACAoC,mBAAmB,CAACsB,KAApB,kBADsGjE,EACtG;AAAA,SAAoH2C,mBAApH;AAAA,WAAoHA,mBAApH;AAAA;;AACA;AAAA,qDAFsG3C,EAEtG,mBAA2F2C,mBAA3F,EAA4H,CAAC;AACjHuB,IAAAA,IAAI,EAAEjE;AAD2G,GAAD,CAA5H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEiE,MAAAA,IAAI,EAAElC,EAAE,CAACgC;AAAX,KAAD,EAAoB;AAAEE,MAAAA,IAAI,EAAElE,EAAE,CAACM;AAAX,KAApB,EAAyC;AAAE4D,MAAAA,IAAI,EAAElE,EAAE,CAACO;AAAX,KAAzC,CAAP;AAAyE,GAFnH;AAAA;;AAIA,MAAM4D,yBAAyB,GAAG,uBAAlC;AACA,MAAMC,kCAAkC,GAAG,yBAA3C;AACA,MAAMC,wCAAwC,GAAG,sBAAjD;AACA,MAAMC,iCAAiC,GAAG,0BAA1C;AACA,MAAMC,yBAAyB,GAAG,uBAAlC;AACA,MAAMC,+BAA+B,GAAG,oBAAxC;AACA,MAAMC,wBAAwB,GAAG,iBAAjC;AACA,MAAMC,UAAU,GAAG,QAAnB;AACA,MAAMC,aAAa,GAAG,WAAtB;AACA,MAAMC,cAAc,GAAG,YAAvB;AACA,MAAMC,gBAAgB,GAAG,cAAzB;AACA,MAAMC,eAAe,GAAG,aAAxB;AACA,MAAMC,iBAAiB,GAAG,aAA1B;AACA,MAAMC,iBAAiB,GAAG,MAA1B;AACA,MAAMC,yBAAyB,GAAG,GAAlC,C,CACA;;AACA,IAAIC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBF,IAAI,CAACG,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAAnC,CAAX,IAAoDH,IAAI,CAACG,GAAL,CAAS,CAAT,EAAY,EAAZ,CAA/E;AACA,MAAMC,sBAAsB,GAAG,EAA/B;;AACA,MAAMC,mBAAmB,GAAIC,MAAD,IAAY;AACpC;AACA,QAAMC,iBAAiB,GAAG,CACtBD,MAAM,CAACZ,gBAAD,CADgB,EAEtBY,MAAM,CAACf,UAAD,CAFgB,EAGxBiB,IAHwB,CAGnBV,yBAHmB,CAA1B;;AAIA,MAAIM,sBAAsB,CAACK,cAAvB,CAAsCF,iBAAtC,CAAJ,EAA8D;AAC1D,WAAOH,sBAAsB,CAACG,iBAAD,CAA7B;AACH,GAFD,MAGK;AACD,UAAMG,GAAG,GAAGX,oBAAoB,EAAhC;AACAK,IAAAA,sBAAsB,CAACG,iBAAD,CAAtB,GAA4CG,GAA5C;AACA,WAAOA,GAAP;AACH;AACJ,CAdD;;AAeA,MAAMC,gBAAgB,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,wBAAhB,KAA6C;AAClE,QAAMC,mBAAmB,GAAGH,MAAM,CAACI,MAAP,CAAc3D,IAAd,CAAmBhD,MAAM,CAAC4G,CAAC,IAAIA,CAAC,YAAYvF,aAAnB,CAAzB,CAA5B;AACA,SAAOqF,mBAAmB,CAAC1D,IAApB,CAAyB/C,SAAS,CAAC4G,aAAa,IAAI;AACvD,QAAIC,EAAJ,CADuD,CAEvD;AACA;;;AACA,UAAMC,OAAO,GAAGR,MAAM,CAACS,QAAP,CAAgBT,MAAM,CAACU,GAAP,CAAWC,OAAX,CAAmB,iBAAnB,EAAsCC,CAAC,IAAIA,CAAC,CAACD,OAAF,CAAU,KAAV,EAAiB,MAAjB,CAA3C,CAAhB,CAAhB;AACA,UAAME,QAAQ,GAAG,CAAC,CAACN,EAAE,GAAGC,OAAO,CAACM,IAAR,CAAaC,QAAb,CAAsBT,aAAa,CAACU,QAAd,CAAuBC,MAA7C,CAAN,MAAgE,IAAhE,IAAwEV,EAAE,KAAK,KAAK,CAApF,GAAwF,KAAK,CAA7F,GAAiGA,EAAE,CAACW,QAAH,EAAlG,KAAoH,EAArI;AACA,UAAMC,cAAc,GAAGnB,MAAM,CAACoB,WAAP,CAAmBN,IAAnB,CAAwBC,QAAxB,CAAiCpH,GAAjC,CAAqCmE,EAAE,IAAIA,EAA3C,EAA+CuD,IAA/C,CAAoDvD,EAAE,IAAIA,EAAE,CAACmD,MAAH,KAAcX,aAAa,CAACU,QAAd,CAAuBC,MAA/F,CAAvB;;AACA,QAAI,CAACE,cAAL,EAAqB;AACjB,aAAO7H,EAAE,CAAC,IAAD,CAAT;AACH;;AACD,QAAIgI,UAAU,GAAGH,cAAjB;;AACA,WAAOG,UAAU,CAACC,UAAlB,EAA8B;AAC1BD,MAAAA,UAAU,GAAGA,UAAU,CAACC,UAAxB;AACH;;AACD,UAAMC,UAAU,GAAGF,UAAU,CAACG,YAAX,CAAwB9H,GAAxB,CAA4B+H,CAAC,IAAI;AAAE,UAAInB,EAAJ;;AAAQ,aAAO,CAACA,EAAE,GAAGmB,CAAC,CAACC,WAAR,MAAyB,IAAzB,IAAiCpB,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACqB,IAApE;AAA2E,KAAtH,EAAwHnI,MAAxH,CAA+HqE,EAAE,IAAIA,EAArI,EAAyI8B,IAAzI,CAA8I,GAA9I,KAAsJ,GAAzK;AACA,UAAMF,MAAM,GAAG;AACX,OAACX,eAAD,GAAmByC,UADR;AAEX,OAAC5C,aAAD,GAAkB,IAAGiC,QAAS,EAFnB;AAGX,OAACzC,yBAAD,GAA6Ba,iBAHlB;AAIX,OAACP,wBAAD,GAA4B8C,UAJjB;AAKX,OAAC7C,UAAD,GAAc2B,aAAa,CAACU,QAAd,CAAuBC;AAL1B,KAAf;;AAOA,QAAIhB,KAAJ,EAAW;AACPP,MAAAA,MAAM,CAACb,cAAD,CAAN,GAAyBoB,KAAK,CAAC4B,QAAN,EAAzB;AACH;;AACD,QAAIC,SAAS,GAAGX,cAAc,CAACW,SAA/B;;AACA,QAAIA,SAAJ,EAAe;AACX,UAAIA,SAAS,KAAK/G,qBAAlB,EAAyC;AACrC,YAAIgH,YAAY,GAAGzB,aAAa,CAACU,QAAjC,CADqC,CAErC;;AACA,eAAOe,YAAY,CAACR,UAApB,EAAgC;AAC5BQ,UAAAA,YAAY,GAAGA,YAAY,CAACR,UAA5B;AACH;;AACDO,QAAAA,SAAS,GAAGC,YAAY,CAACD,SAAzB;AACH;AACJ,KATD,MAUK;AACDA,MAAAA,SAAS,GAAGxB,aAAa,CAACU,QAAd,CAAuBc,SAAnC;AACH;;AACD,QAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AAC/B,aAAOxI,EAAE,CAAC0I,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvC,MAAlB,CAAd,EAAyC;AAAE,SAACZ,gBAAD,GAAoBgD;AAAtB,OAAzC,CAAD,CAAT;AACH,KAFD,MAGK,IAAIA,SAAJ,EAAe;AAChB,YAAMI,gBAAgB,GAAGhC,wBAAwB,CAACiC,uBAAzB,CAAiDL,SAAjD,CAAzB;AACA,aAAOxI,EAAE,CAAC0I,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvC,MAAlB,CAAd,EAAyC;AAAE,SAACZ,gBAAD,GAAoBoD,gBAAgB,CAACE;AAAvC,OAAzC,CAAD,CAAT;AACH,KA7CsD,CA8CvD;;;AACA,WAAO9I,EAAE,CAAC,IAAD,CAAT;AACH,GAhDwC,CAAlC,EAgDHG,MAAM,CAACqE,EAAE,IAAI,CAAC,CAACA,EAAT,CAhDH,EAgDiBnE,GAAG,CAAC+F,MAAM,IAAKsC,MAAM,CAACC,MAAP,CAAc;AAAE,KAACzD,yBAAD,GAA6BkB,MAAM,CAACZ,gBAAD,CAArC;AAAyD,KAACL,+BAAD,GAAmCgB,mBAAmB,CAACC,MAAD;AAA/G,GAAd,EAAyIA,MAAzI,CAAZ,CAhDpB,EAgDoL9F,OAAO,CAACkE,EAAE,IAAIA,EAAE,CAACa,UAAD,CAAT,CAhD3L,EAgDmN9E,QAAQ,CAACiE,EAAE,IAAIA,EAAE,CAACrB,IAAH,CAAQ3C,oBAAoB,CAAC,CAAC8G,CAAD,EAAIyB,CAAJ,KAAUC,IAAI,CAACC,SAAL,CAAe3B,CAAf,MAAsB0B,IAAI,CAACC,SAAL,CAAeF,CAAf,CAAjC,CAA5B,EAAiFtI,SAAS,CAACyI,SAAD,CAA1F,EAAuGxI,QAAQ,EAA/G,EAAmHL,GAAG,CAAC,CAAC,CAAC8I,KAAD,EAAQC,OAAR,CAAD,KAAsBD,KAAK,GAAGT,MAAM,CAACC,MAAP,CAAc;AAAE,KAAC5D,kCAAD,GAAsCoE,KAAK,CAAC3D,gBAAD,CAA7C;AAAiE,KAACP,iCAAD,GAAqCkE,KAAK,CAAC1D,eAAD,CAA3G;AAA8H,KAACT,wCAAD,GAA4CmE,KAAK,CAAChE,+BAAD;AAA/K,GAAd,EAAkOiE,OAAlO,CAAH,GAAgPA,OAA5Q,CAAtH,CAAP,CAhD3N,CAAP;AAiDH,CAnDD;;AAoDA,MAAMC,qBAAN,CAA4B;AACxBvG,EAAAA,WAAW,CAAC4D,MAAD,EAASC,KAAT,EAAgBC,wBAAhB,EAA0CpD,IAA1C,EAAgD8F,mBAAhD,EAAqE7F,QAArE,EAA+E;AACtFpC,IAAAA,eAAe,CAAC,aAAD,EAAgB1B,OAAO,CAACgE,IAAxB,EAA8B,iBAA9B,CAAf,CADsF,CAEtF;AACA;AACA;;AACAP,IAAAA,WAAW,GAAGa,IAAd,CAAmB,MAAM;AACrB,YAAMlB,SAAS,GAAGU,QAAQ,CAACS,GAAT,CAAarB,SAAb,CAAlB;;AACA,UAAI,CAAC6D,MAAD,IAAW,CAAC3D,SAAhB,EAA2B;AACvB;AACH;;AACDS,MAAAA,IAAI,CAACM,iBAAL,CAAuB,MAAM;AACzB,aAAKyF,UAAL,GAAkB9C,gBAAgB,CAACC,MAAD,EAASC,KAAT,EAAgBC,wBAAhB,CAAhB,CAA0DzD,IAA1D,CAA+D/C,SAAS,CAAEgG,MAAD,IAAY9E,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChJ,cAAIgI,mBAAJ,EAAyB;AACrB,kBAAMA,mBAAmB,CAACzF,WAA1B;AACH;;AACD,iBAAO9B,QAAQ,CAACgB,SAAD,EAAY2C,iBAAZ,EAA+BU,MAA/B,CAAf;AACH,SAL+G,CAAtB,CAAxE,EAKbjC,SALa,EAAlB;AAMH,OAPD;AAQH,KAbD;AAcH;;AACDG,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKiF,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgB9E,WAAhB;AACH;AACJ;;AAzBuB;;AA2B5B4E,qBAAqB,CAAC3E,IAAtB;AAAA,mBAAkH2E,qBAAlH,EAtHsG1I,EAsHtG,UAAyJY,IAAI,CAACiI,MAA9J,MAtHsG7I,EAsHtG,UAAiMe,EAAE,CAAC+H,KAApM,MAtHsG9I,EAsHtG,UAAsOA,EAAE,CAAC+I,wBAAzO,GAtHsG/I,EAsHtG,UAA8QA,EAAE,CAACM,MAAjR,GAtHsGN,EAsHtG,UAAoS2C,mBAApS,MAtHsG3C,EAsHtG,UAAoVA,EAAE,CAACO,QAAvV;AAAA;;AACAmI,qBAAqB,CAACzE,KAAtB,kBAvHsGjE,EAuHtG;AAAA,SAAsH0I,qBAAtH;AAAA,WAAsHA,qBAAtH;AAAA;;AACA;AAAA,qDAxHsG1I,EAwHtG,mBAA2F0I,qBAA3F,EAA8H,CAAC;AACnHxE,IAAAA,IAAI,EAAEjE;AAD6G,GAAD,CAA9H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEiE,MAAAA,IAAI,EAAEtD,IAAI,CAACiI,MAAb;AAAqBG,MAAAA,UAAU,EAAE,CAAC;AAChE9E,QAAAA,IAAI,EAAEhE;AAD0D,OAAD;AAAjC,KAAD,EAE3B;AAAEgE,MAAAA,IAAI,EAAEnD,EAAE,CAAC+H,KAAX;AAAkBE,MAAAA,UAAU,EAAE,CAAC;AACjC9E,QAAAA,IAAI,EAAEhE;AAD2B,OAAD;AAA9B,KAF2B,EAI3B;AAAEgE,MAAAA,IAAI,EAAElE,EAAE,CAAC+I;AAAX,KAJ2B,EAIY;AAAE7E,MAAAA,IAAI,EAAElE,EAAE,CAACM;AAAX,KAJZ,EAIiC;AAAE4D,MAAAA,IAAI,EAAEvB,mBAAR;AAA6BqG,MAAAA,UAAU,EAAE,CAAC;AACxG9E,QAAAA,IAAI,EAAEhE;AADkG,OAAD;AAAzC,KAJjC,EAM3B;AAAEgE,MAAAA,IAAI,EAAElE,EAAE,CAACO;AAAX,KAN2B,CAAP;AAMK,GAR/C;AAAA;;AAUA,MAAM0I,4BAA4B,GAAG,IAAI9I,cAAJ,CAAmB,kCAAnB,CAArC;;AACA,SAAS+I,+BAAT,CAAyCC,QAAzC,EAAmDC,UAAnD,EAA+D;AAC3D,MAAI,CAACtK,4BAA4B,CAACuK,IAA7B,EAAL,EAA0C;AACtC,WAAO,IAAP;AACH;;AACD,QAAMC,gBAAgB,GAAGrK,qBAAqB,CAACoD,uBAAD,EAA0B8G,QAA1B,EAAoCC,UAApC,CAA9C;AACA,SAAOE,gBAAgB,IAAI,IAAIpH,SAAJ,CAAcoH,gBAAd,CAA3B;AACH;;AACD,SAASC,wBAAT,CAAkCC,EAAlC,EAAsC;AAClC,SAAO,CAAC3G,IAAD,EAAOC,QAAP,KAAoB;AACvB,QAAI,CAAChE,4BAA4B,CAACuK,IAA7B,EAAL,EAA0C;AACtC,aAAO,IAAP;AACH;;AACD,UAAMjH,SAAS,GAAGS,IAAI,CAACM,iBAAL,CAAuB,MAAMqG,EAAE,CAAC1G,QAAD,CAA/B,CAAlB;AACA,WAAO,IAAIZ,SAAJ,CAAcE,SAAd,CAAP;AACH,GAND;AAOH;;AACD,MAAMqH,4BAA4B,GAAG;AACjCC,EAAAA,OAAO,EAAEpH,kBADwB;AAEjCqH,EAAAA,IAAI,EAAE,CACF,CAAC,IAAIzJ,QAAJ,EAAD,EAAiB+I,4BAAjB,CADE;AAF2B,CAArC;AAMA,MAAMW,mCAAmC,GAAG;AACxCF,EAAAA,OAAO,EAAExH,SAD+B;AAExC2H,EAAAA,UAAU,EAAEX,+BAF4B;AAGxCS,EAAAA,IAAI,EAAE,CACF,CAAC,IAAIzJ,QAAJ,EAAD,EAAiB+I,4BAAjB,CADE,EAEFzI,WAFE;AAHkC,CAA5C;;AAQA,MAAMsJ,eAAN,CAAsB;AAClB3H,EAAAA,WAAW,CAAC4H,sBAAD,EAAyBC,oBAAzB,EAA+C;AACtDtJ,IAAAA,eAAe,CAAC,aAAD,EAAgB1B,OAAO,CAACgE,IAAxB,EAA8B,WAA9B,CAAf;AACH;;AAHiB;;AAKtB8G,eAAe,CAAC/F,IAAhB;AAAA,mBAA4G+F,eAA5G,EAtKsG9J,EAsKtG,UAA6I0I,qBAA7I,MAtKsG1I,EAsKtG,UAA+L2C,mBAA/L;AAAA;;AACAmH,eAAe,CAACG,IAAhB,kBAvKsGjK,EAuKtG;AAAA,QAA6G8J;AAA7G;AACAA,eAAe,CAACI,IAAhB,kBAxKsGlK,EAwKtG;AAAA,aAAyI,CACjI4J,mCADiI,EAEjIH,4BAFiI,EAGjI;AACIC,IAAAA,OAAO,EAAEtJ,eADb;AAEI+J,IAAAA,QAAQ,EAAErL,4BAA4B,CAAC4D,KAF3C;AAGI0H,IAAAA,KAAK,EAAE;AAHX,GAHiI;AAAzI;;AASA;AAAA,qDAjLsGpK,EAiLtG,mBAA2F8J,eAA3F,EAAwH,CAAC;AAC7G5F,IAAAA,IAAI,EAAE7D,QADuG;AAE7GgK,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,SAAS,EAAE,CACPV,mCADO,EAEPH,4BAFO,EAGP;AACIC,QAAAA,OAAO,EAAEtJ,eADb;AAEI+J,QAAAA,QAAQ,EAAErL,4BAA4B,CAAC4D,KAF3C;AAGI0H,QAAAA,KAAK,EAAE;AAHX,OAHO;AADZ,KAAD;AAFuG,GAAD,CAAxH,EAa4B,YAAY;AAAE,WAAO,CAAC;AAAElG,MAAAA,IAAI,EAAEwE,qBAAR;AAA+BM,MAAAA,UAAU,EAAE,CAAC;AAC1E9E,QAAAA,IAAI,EAAEhE;AADoE,OAAD;AAA3C,KAAD,EAE3B;AAAEgE,MAAAA,IAAI,EAAEvB,mBAAR;AAA6BqG,MAAAA,UAAU,EAAE,CAAC;AAC5C9E,QAAAA,IAAI,EAAEhE;AADsC,OAAD;AAAzC,KAF2B,CAAP;AAIlB,GAjBxB;AAAA;;AAkBA,SAASqK,gBAAT,CAA0Bf,EAA1B,EAA8B,GAAGG,IAAjC,EAAuC;AACnC,SAAO;AACHa,IAAAA,QAAQ,EAAEV,eADP;AAEHQ,IAAAA,SAAS,EAAE,CAAC;AACJZ,MAAAA,OAAO,EAAET,4BADL;AAEJY,MAAAA,UAAU,EAAEN,wBAAwB,CAACC,EAAD,CAFhC;AAGJY,MAAAA,KAAK,EAAE,IAHH;AAIJT,MAAAA,IAAI,EAAE,CACFrJ,MADE,EAEFC,QAFE,EAGFrB,sBAHE,EAIFuB,YAJE,EAKF,GAAGkJ,IALD;AAJF,KAAD;AAFR,GAAP;AAeH;AAED;AACA;AACA;;;AAEA,SAASzH,SAAT,EAAoBI,kBAApB,EAAwCwH,eAAxC,EAAyDpB,qBAAzD,EAAgF/F,mBAAhF,EAAqGJ,iBAArG,EAAwHvB,YAAxH,EAAsIE,mBAAtI,EAA2JuB,WAA3J,EAAwKrB,QAAxK,EAAkLmJ,gBAAlL,EAAoMjJ,6BAApM,EAAmOE,gBAAnO,EAAqPI,SAArP,EAAgQE,iBAAhQ,EAAmRJ,QAAnR,EAA6RoE,gBAA7R","sourcesContent":["import { ɵgetAllInstancesOf, ɵisAnalyticsSupportedFactory, ɵzoneWrap, VERSION, ɵgetDefaultInstanceOf, ɵAngularFireSchedulers } from '@angular/fire';\r\nimport { timer, from, of } from 'rxjs';\r\nimport { concatMap, distinct, filter, switchMap, map, groupBy, mergeMap, distinctUntilChanged, startWith, pairwise } from 'rxjs/operators';\r\nimport * as i0 from '@angular/core';\r\nimport { Injectable, Optional, InjectionToken, APP_INITIALIZER, NgModule, NgZone, Injector } from '@angular/core';\r\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\r\nimport { registerVersion } from 'firebase/app';\r\nimport { __awaiter } from 'tslib';\r\nimport * as i1$1 from '@angular/router';\r\nimport { ActivationEnd, ɵEmptyOutletComponent } from '@angular/router';\r\nimport * as i2 from '@angular/platform-browser';\r\nimport { getAnalytics as getAnalytics$1, initializeAnalytics as initializeAnalytics$1, logEvent as logEvent$1, setAnalyticsCollectionEnabled as setAnalyticsCollectionEnabled$1, setCurrentScreen as setCurrentScreen$1, settings as settings$1, setUserId as setUserId$1, setUserProperties as setUserProperties$1 } from 'firebase/analytics';\r\nexport * from 'firebase/analytics';\r\nimport * as i1 from '@angular/fire/auth';\r\nimport { authState } from '@angular/fire/auth';\r\n\r\nclass Analytics {\r\n    constructor(analytics) {\r\n        return analytics;\r\n    }\r\n}\r\nconst ANALYTICS_PROVIDER_NAME = 'analytics';\r\nclass AnalyticsInstances {\r\n    constructor() {\r\n        return ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME);\r\n    }\r\n}\r\nconst analyticInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME))), distinct());\r\n\r\nconst isSupported = ɵisAnalyticsSupportedFactory.async;\r\n\r\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\r\nconst getAnalytics = ɵzoneWrap(getAnalytics$1, true);\r\nconst initializeAnalytics = ɵzoneWrap(initializeAnalytics$1, true);\r\nconst logEvent = ɵzoneWrap(logEvent$1, true);\r\nconst setAnalyticsCollectionEnabled = ɵzoneWrap(setAnalyticsCollectionEnabled$1, true);\r\nconst setCurrentScreen = ɵzoneWrap(setCurrentScreen$1, true);\r\nconst settings = ɵzoneWrap(settings$1, true);\r\nconst setUserId = ɵzoneWrap(setUserId$1, true);\r\nconst setUserProperties = ɵzoneWrap(setUserProperties$1, true);\r\n\r\nclass UserTrackingService {\r\n    constructor(auth, zone, injector) {\r\n        this.disposables = [];\r\n        registerVersion('angularfire', VERSION.full, 'user-tracking');\r\n        let resolveInitialized;\r\n        this.initialized = zone.runOutsideAngular(() => new Promise(resolve => { resolveInitialized = resolve; }));\r\n        // The APP_INITIALIZER that is making isSupported() sync for the sake of convenient DI\r\n        // may not be done when services are initialized. Guard the functionality by first ensuring\r\n        // that the (global) promise has resolved, then get Analytics from the injector.\r\n        isSupported().then(() => {\r\n            const analytics = injector.get(Analytics);\r\n            if (analytics) {\r\n                this.disposables = [\r\n                    // TODO add credential tracking back in\r\n                    authState(auth).subscribe(user => {\r\n                        setUserId(analytics, user === null || user === void 0 ? void 0 : user.uid);\r\n                        resolveInitialized();\r\n                    }),\r\n                ];\r\n            }\r\n            else {\r\n                resolveInitialized();\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.disposables.forEach(it => it.unsubscribe());\r\n    }\r\n}\r\nUserTrackingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: UserTrackingService, deps: [{ token: i1.Auth }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\r\nUserTrackingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: UserTrackingService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: UserTrackingService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i1.Auth }, { type: i0.NgZone }, { type: i0.Injector }]; } });\r\n\r\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\r\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\r\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY = 'firebase_previous_id';\r\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\r\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\r\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\r\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\r\nconst OUTLET_KEY = 'outlet';\r\nconst PAGE_PATH_KEY = 'page_path';\r\nconst PAGE_TITLE_KEY = 'page_title';\r\nconst SCREEN_CLASS_KEY = 'screen_class';\r\nconst SCREEN_NAME_KEY = 'screen_name';\r\nconst SCREEN_VIEW_EVENT = 'screen_view';\r\nconst EVENT_ORIGIN_AUTO = 'auto';\r\nconst SCREEN_INSTANCE_DELIMITER = '#';\r\n// this is an INT64 in iOS/Android but use INT32 cause javascript\r\nlet nextScreenInstanceID = Math.floor(Math.random() * (Math.pow(2, 32) - 1)) - Math.pow(2, 31);\r\nconst knownScreenInstanceIDs = {};\r\nconst getScreenInstanceID = (params) => {\r\n    // unique the screen class against the outlet name\r\n    const screenInstanceKey = [\r\n        params[SCREEN_CLASS_KEY],\r\n        params[OUTLET_KEY]\r\n    ].join(SCREEN_INSTANCE_DELIMITER);\r\n    if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\r\n        return knownScreenInstanceIDs[screenInstanceKey];\r\n    }\r\n    else {\r\n        const ret = nextScreenInstanceID++;\r\n        knownScreenInstanceIDs[screenInstanceKey] = ret;\r\n        return ret;\r\n    }\r\n};\r\nconst ɵscreenViewEvent = (router, title, componentFactoryResolver) => {\r\n    const activationEndEvents = router.events.pipe(filter(e => e instanceof ActivationEnd));\r\n    return activationEndEvents.pipe(switchMap(activationEnd => {\r\n        var _a;\r\n        // router parseUrl is having trouble with outlets when they're empty\r\n        // e.g, /asdf/1(bob://sally:asdf), so put another slash in when empty\r\n        const urlTree = router.parseUrl(router.url.replace(/(?:\\().+(?:\\))/g, a => a.replace('://', ':///')));\r\n        const pagePath = ((_a = urlTree.root.children[activationEnd.snapshot.outlet]) === null || _a === void 0 ? void 0 : _a.toString()) || '';\r\n        const actualSnapshot = router.routerState.root.children.map(it => it).find(it => it.outlet === activationEnd.snapshot.outlet);\r\n        if (!actualSnapshot) {\r\n            return of(null);\r\n        }\r\n        let actualDeep = actualSnapshot;\r\n        while (actualDeep.firstChild) {\r\n            actualDeep = actualDeep.firstChild;\r\n        }\r\n        const screenName = actualDeep.pathFromRoot.map(s => { var _a; return (_a = s.routeConfig) === null || _a === void 0 ? void 0 : _a.path; }).filter(it => it).join('/') || '/';\r\n        const params = {\r\n            [SCREEN_NAME_KEY]: screenName,\r\n            [PAGE_PATH_KEY]: `/${pagePath}`,\r\n            [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\r\n            [FIREBASE_SCREEN_NAME_KEY]: screenName,\r\n            [OUTLET_KEY]: activationEnd.snapshot.outlet\r\n        };\r\n        if (title) {\r\n            params[PAGE_TITLE_KEY] = title.getTitle();\r\n        }\r\n        let component = actualSnapshot.component;\r\n        if (component) {\r\n            if (component === ɵEmptyOutletComponent) {\r\n                let deepSnapshot = activationEnd.snapshot;\r\n                // TODO when might there be mutple children, different outlets? explore\r\n                while (deepSnapshot.firstChild) {\r\n                    deepSnapshot = deepSnapshot.firstChild;\r\n                }\r\n                component = deepSnapshot.component;\r\n            }\r\n        }\r\n        else {\r\n            component = activationEnd.snapshot.component;\r\n        }\r\n        if (typeof component === 'string') {\r\n            return of(Object.assign(Object.assign({}, params), { [SCREEN_CLASS_KEY]: component }));\r\n        }\r\n        else if (component) {\r\n            const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\r\n            return of(Object.assign(Object.assign({}, params), { [SCREEN_CLASS_KEY]: componentFactory.selector }));\r\n        }\r\n        // lazy loads cause extra activations, ignore\r\n        return of(null);\r\n    }), filter(it => !!it), map(params => (Object.assign({ [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY], [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params) }, params))), groupBy(it => it[OUTLET_KEY]), mergeMap(it => it.pipe(distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)), startWith(undefined), pairwise(), map(([prior, current]) => prior ? Object.assign({ [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY], [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY], [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY] }, current) : current))));\r\n};\r\nclass ScreenTrackingService {\r\n    constructor(router, title, componentFactoryResolver, zone, userTrackingService, injector) {\r\n        registerVersion('angularfire', VERSION.full, 'screen-tracking');\r\n        // The APP_INITIALIZER that is making isSupported() sync for the sake of convenient DI\r\n        // may not be done when services are initialized. Guard the functionality by first ensuring\r\n        // that the (global) promise has resolved, then get Analytics from the injector.\r\n        isSupported().then(() => {\r\n            const analytics = injector.get(Analytics);\r\n            if (!router || !analytics) {\r\n                return;\r\n            }\r\n            zone.runOutsideAngular(() => {\r\n                this.disposable = ɵscreenViewEvent(router, title, componentFactoryResolver).pipe(switchMap((params) => __awaiter(this, void 0, void 0, function* () {\r\n                    if (userTrackingService) {\r\n                        yield userTrackingService.initialized;\r\n                    }\r\n                    return logEvent(analytics, SCREEN_VIEW_EVENT, params);\r\n                }))).subscribe();\r\n            });\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.disposable) {\r\n            this.disposable.unsubscribe();\r\n        }\r\n    }\r\n}\r\nScreenTrackingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ScreenTrackingService, deps: [{ token: i1$1.Router, optional: true }, { token: i2.Title, optional: true }, { token: i0.ComponentFactoryResolver }, { token: i0.NgZone }, { token: UserTrackingService, optional: true }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\r\nScreenTrackingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ScreenTrackingService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ScreenTrackingService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i1$1.Router, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: i2.Title, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: i0.ComponentFactoryResolver }, { type: i0.NgZone }, { type: UserTrackingService, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: i0.Injector }]; } });\r\n\r\nconst PROVIDED_ANALYTICS_INSTANCES = new InjectionToken('angularfire2.analytics-instances');\r\nfunction defaultAnalyticsInstanceFactory(provided, defaultApp) {\r\n    if (!ɵisAnalyticsSupportedFactory.sync()) {\r\n        return null;\r\n    }\r\n    const defaultAnalytics = ɵgetDefaultInstanceOf(ANALYTICS_PROVIDER_NAME, provided, defaultApp);\r\n    return defaultAnalytics && new Analytics(defaultAnalytics);\r\n}\r\nfunction analyticsInstanceFactory(fn) {\r\n    return (zone, injector) => {\r\n        if (!ɵisAnalyticsSupportedFactory.sync()) {\r\n            return null;\r\n        }\r\n        const analytics = zone.runOutsideAngular(() => fn(injector));\r\n        return new Analytics(analytics);\r\n    };\r\n}\r\nconst ANALYTICS_INSTANCES_PROVIDER = {\r\n    provide: AnalyticsInstances,\r\n    deps: [\r\n        [new Optional(), PROVIDED_ANALYTICS_INSTANCES],\r\n    ]\r\n};\r\nconst DEFAULT_ANALYTICS_INSTANCE_PROVIDER = {\r\n    provide: Analytics,\r\n    useFactory: defaultAnalyticsInstanceFactory,\r\n    deps: [\r\n        [new Optional(), PROVIDED_ANALYTICS_INSTANCES],\r\n        FirebaseApp,\r\n    ]\r\n};\r\nclass AnalyticsModule {\r\n    constructor(_screenTrackingService, _userTrackingService) {\r\n        registerVersion('angularfire', VERSION.full, 'analytics');\r\n    }\r\n}\r\nAnalyticsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AnalyticsModule, deps: [{ token: ScreenTrackingService, optional: true }, { token: UserTrackingService, optional: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nAnalyticsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AnalyticsModule });\r\nAnalyticsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AnalyticsModule, providers: [\r\n        DEFAULT_ANALYTICS_INSTANCE_PROVIDER,\r\n        ANALYTICS_INSTANCES_PROVIDER,\r\n        {\r\n            provide: APP_INITIALIZER,\r\n            useValue: ɵisAnalyticsSupportedFactory.async,\r\n            multi: true,\r\n        }\r\n    ] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AnalyticsModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    providers: [\r\n                        DEFAULT_ANALYTICS_INSTANCE_PROVIDER,\r\n                        ANALYTICS_INSTANCES_PROVIDER,\r\n                        {\r\n                            provide: APP_INITIALIZER,\r\n                            useValue: ɵisAnalyticsSupportedFactory.async,\r\n                            multi: true,\r\n                        }\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: ScreenTrackingService, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: UserTrackingService, decorators: [{\r\n                    type: Optional\r\n                }] }]; } });\r\nfunction provideAnalytics(fn, ...deps) {\r\n    return {\r\n        ngModule: AnalyticsModule,\r\n        providers: [{\r\n                provide: PROVIDED_ANALYTICS_INSTANCES,\r\n                useFactory: analyticsInstanceFactory(fn),\r\n                multi: true,\r\n                deps: [\r\n                    NgZone,\r\n                    Injector,\r\n                    ɵAngularFireSchedulers,\r\n                    FirebaseApps,\r\n                    ...deps,\r\n                ]\r\n            }]\r\n    };\r\n}\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { Analytics, AnalyticsInstances, AnalyticsModule, ScreenTrackingService, UserTrackingService, analyticInstance$, getAnalytics, initializeAnalytics, isSupported, logEvent, provideAnalytics, setAnalyticsCollectionEnabled, setCurrentScreen, setUserId, setUserProperties, settings, ɵscreenViewEvent };\r\n\n"]},"metadata":{},"sourceType":"module"}