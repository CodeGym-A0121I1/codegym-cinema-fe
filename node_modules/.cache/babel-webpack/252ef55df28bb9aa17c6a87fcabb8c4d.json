{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport { Subject, of, Observable, from, merge } from 'rxjs';\nimport { observeOn, switchMap, map, shareReplay, first, switchMapTo, subscribeOn, filter } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport { ɵcacheInstance, ɵfirebaseAppFactory, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵapplyMixins } from '@angular/fire/compat';\nimport { isPlatformServer } from '@angular/common';\nimport * as i2 from '@angular/fire/app-check';\nimport firebase from 'firebase/compat/app'; // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n// Export a null object with the same keys as firebase/compat/auth, so Proxy can work with proxy-polyfill in Internet Explorer\n\nconst proxyPolyfillCompat = {\n  name: null,\n  config: null,\n  emulatorConfig: null,\n  app: null,\n  applyActionCode: null,\n  checkActionCode: null,\n  confirmPasswordReset: null,\n  createUserWithEmailAndPassword: null,\n  currentUser: null,\n  fetchSignInMethodsForEmail: null,\n  isSignInWithEmailLink: null,\n  getRedirectResult: null,\n  languageCode: null,\n  settings: null,\n  onAuthStateChanged: null,\n  onIdTokenChanged: null,\n  sendSignInLinkToEmail: null,\n  sendPasswordResetEmail: null,\n  setPersistence: null,\n  signInAndRetrieveDataWithCredential: null,\n  signInAnonymously: null,\n  signInWithCredential: null,\n  signInWithCustomToken: null,\n  signInWithEmailAndPassword: null,\n  signInWithPhoneNumber: null,\n  signInWithEmailLink: null,\n  signInWithPopup: null,\n  signInWithRedirect: null,\n  signOut: null,\n  tenantId: null,\n  updateCurrentUser: null,\n  useDeviceLanguage: null,\n  useEmulator: null,\n  verifyPasswordResetCode: null\n};\nconst USE_EMULATOR = new InjectionToken('angularfire2.auth.use-emulator');\nconst SETTINGS = new InjectionToken('angularfire2.auth.settings');\nconst TENANT_ID = new InjectionToken('angularfire2.auth.tenant-id');\nconst LANGUAGE_CODE = new InjectionToken('angularfire2.auth.langugage-code');\nconst USE_DEVICE_LANGUAGE = new InjectionToken('angularfire2.auth.use-device-language');\nconst PERSISTENCE = new InjectionToken('angularfire.auth.persistence');\n\nconst ɵauthFactory = (app, zone, useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence) => ɵcacheInstance(`${app.name}.auth`, 'AngularFireAuth', app.name, () => {\n  const auth = zone.runOutsideAngular(() => app.auth());\n\n  if (useEmulator) {\n    auth.useEmulator(...useEmulator);\n  }\n\n  if (tenantId) {\n    auth.tenantId = tenantId;\n  }\n\n  auth.languageCode = languageCode;\n\n  if (useDeviceLanguage) {\n    auth.useDeviceLanguage();\n  }\n\n  if (settings) {\n    for (const [k, v] of Object.entries(settings)) {\n      auth.settings[k] = v;\n    }\n  }\n\n  if (persistence) {\n    auth.setPersistence(persistence);\n  }\n\n  return auth;\n}, [useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence]);\n\nclass AngularFireAuth {\n  constructor(options, name, // tslint:disable-next-line:ban-types\n  platformId, zone, schedulers, useEmulator, // can't use the tuple here\n  settings, // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n    const logins = new Subject();\n    const auth = of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap(() => zone.runOutsideAngular(() => import('firebase/compat/auth'))), map(() => ɵfirebaseAppFactory(options, zone, name)), map(app => ɵauthFactory(app, zone, useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence)), shareReplay({\n      bufferSize: 1,\n      refCount: false\n    }));\n\n    if (isPlatformServer(platformId)) {\n      this.authState = this.user = this.idToken = this.idTokenResult = this.credential = of(null);\n    } else {\n      // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\n      //       (e.g, `import { auth } from 'firebase/compat/app'`) are getting an undefined auth object unexpectedly\n      //       as we're completely lazy. Let's eagerly load the Auth SDK here.\n      //       There could potentially be race conditions still... but this greatly decreases the odds while\n      //       we reevaluate the API.\n      const _ = auth.pipe(first()).subscribe();\n\n      const redirectResult = auth.pipe(switchMap(auth => auth.getRedirectResult().then(it => it, () => null)), keepUnstableUntilFirst, shareReplay({\n        bufferSize: 1,\n        refCount: false\n      }));\n      const authStateChanged = auth.pipe(switchMap(auth => new Observable(sub => ({\n        unsubscribe: zone.runOutsideAngular(() => auth.onAuthStateChanged(next => sub.next(next), err => sub.error(err), () => sub.complete()))\n      }))));\n      const idTokenChanged = auth.pipe(switchMap(auth => new Observable(sub => ({\n        unsubscribe: zone.runOutsideAngular(() => auth.onIdTokenChanged(next => sub.next(next), err => sub.error(err), () => sub.complete()))\n      }))));\n      this.authState = redirectResult.pipe(switchMapTo(authStateChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n      this.user = redirectResult.pipe(switchMapTo(idTokenChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n      this.idToken = this.user.pipe(switchMap(user => user ? from(user.getIdToken()) : of(null)));\n      this.idTokenResult = this.user.pipe(switchMap(user => user ? from(user.getIdTokenResult()) : of(null)));\n      this.credential = merge(redirectResult, logins, // pipe in null authState to make credential zipable, just a weird devexp if\n      // authState and user go null to still have a credential\n      this.authState.pipe(filter(it => !it))).pipe( // handle the { user: { } } when a user is already logged in, rather have null\n      // TODO handle the type corcersion better\n      map(credential => (credential === null || credential === void 0 ? void 0 : credential.user) ? credential : null), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n    }\n\n    return ɵlazySDKProxy(this, auth, zone, {\n      spy: {\n        apply: (name, _, val) => {\n          // If they call a signIn or createUser function listen into the promise\n          // this will give us the user credential, push onto the logins Subject\n          // to be consumed in .credential\n          if (name.startsWith('signIn') || name.startsWith('createUser')) {\n            // TODO fix the types, the trouble is UserCredential has everything optional\n            val.then(user => logins.next(user));\n          }\n        }\n      }\n    });\n  }\n\n}\n\nAngularFireAuth.ɵfac = function AngularFireAuth_Factory(t) {\n  return new (t || AngularFireAuth)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8), i0.ɵɵinject(i2.AppCheckInstances, 8));\n};\n\nAngularFireAuth.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AngularFireAuth,\n  factory: AngularFireAuth.ɵfac,\n  providedIn: 'any'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireAuth, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [FIREBASE_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [FIREBASE_APP_NAME]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.ɵAngularFireSchedulers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USE_EMULATOR]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [SETTINGS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TENANT_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LANGUAGE_CODE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USE_DEVICE_LANGUAGE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PERSISTENCE]\n      }]\n    }, {\n      type: i2.AppCheckInstances,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nɵapplyMixins(AngularFireAuth, [proxyPolyfillCompat]);\n\nclass AngularFireAuthModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'auth-compat');\n  }\n\n}\n\nAngularFireAuthModule.ɵfac = function AngularFireAuthModule_Factory(t) {\n  return new (t || AngularFireAuthModule)();\n};\n\nAngularFireAuthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularFireAuthModule\n});\nAngularFireAuthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [AngularFireAuth]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireAuthModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireAuth]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { AngularFireAuth, AngularFireAuthModule, LANGUAGE_CODE, PERSISTENCE, SETTINGS, TENANT_ID, USE_DEVICE_LANGUAGE, USE_EMULATOR, ɵauthFactory };","map":{"version":3,"sources":["D:/Sprint02-ProjectCG/Front-End/codegym-cinema-fe/node_modules/@angular/fire/fesm2015/angular-fire-compat-auth.js"],"names":["i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","NgModule","Subject","of","Observable","from","merge","observeOn","switchMap","map","shareReplay","first","switchMapTo","subscribeOn","filter","i1","keepUnstableUntilFirst","VERSION","ɵcacheInstance","ɵfirebaseAppFactory","ɵlazySDKProxy","FIREBASE_OPTIONS","FIREBASE_APP_NAME","ɵapplyMixins","isPlatformServer","i2","firebase","proxyPolyfillCompat","name","config","emulatorConfig","app","applyActionCode","checkActionCode","confirmPasswordReset","createUserWithEmailAndPassword","currentUser","fetchSignInMethodsForEmail","isSignInWithEmailLink","getRedirectResult","languageCode","settings","onAuthStateChanged","onIdTokenChanged","sendSignInLinkToEmail","sendPasswordResetEmail","setPersistence","signInAndRetrieveDataWithCredential","signInAnonymously","signInWithCredential","signInWithCustomToken","signInWithEmailAndPassword","signInWithPhoneNumber","signInWithEmailLink","signInWithPopup","signInWithRedirect","signOut","tenantId","updateCurrentUser","useDeviceLanguage","useEmulator","verifyPasswordResetCode","USE_EMULATOR","SETTINGS","TENANT_ID","LANGUAGE_CODE","USE_DEVICE_LANGUAGE","PERSISTENCE","ɵauthFactory","zone","persistence","auth","runOutsideAngular","k","v","Object","entries","AngularFireAuth","constructor","options","platformId","schedulers","_appCheckInstances","logins","undefined","pipe","outsideAngular","bufferSize","refCount","authState","user","idToken","idTokenResult","credential","_","subscribe","redirectResult","then","it","authStateChanged","sub","unsubscribe","next","err","error","complete","idTokenChanged","insideAngular","getIdToken","getIdTokenResult","spy","apply","val","startsWith","ɵfac","NgZone","ɵAngularFireSchedulers","AppCheckInstances","ɵprov","type","args","providedIn","decorators","AngularFireAuthModule","registerVersion","full","ɵmod","ɵinj","providers"],"mappings":"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","sourcesContent":["\r\nimport * as i0 from '@angular/core';\r\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\r\nimport { Subject, of, Observable, from, merge } from 'rxjs';\r\nimport { observeOn, switchMap, map, shareReplay, first, switchMapTo, subscribeOn, filter } from 'rxjs/operators';\r\nimport * as i1 from '@angular/fire';\r\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\r\nimport { ɵcacheInstance, ɵfirebaseAppFactory, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵapplyMixins } from '@angular/fire/compat';\r\nimport { isPlatformServer } from '@angular/common';\r\nimport * as i2 from '@angular/fire/app-check';\r\nimport firebase from 'firebase/compat/app';\r\n\r\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\r\n// Export a null object with the same keys as firebase/compat/auth, so Proxy can work with proxy-polyfill in Internet Explorer\r\nconst proxyPolyfillCompat = {\r\n    name: null,\r\n    config: null,\r\n    emulatorConfig: null,\r\n    app: null,\r\n    applyActionCode: null,\r\n    checkActionCode: null,\r\n    confirmPasswordReset: null,\r\n    createUserWithEmailAndPassword: null,\r\n    currentUser: null,\r\n    fetchSignInMethodsForEmail: null,\r\n    isSignInWithEmailLink: null,\r\n    getRedirectResult: null,\r\n    languageCode: null,\r\n    settings: null,\r\n    onAuthStateChanged: null,\r\n    onIdTokenChanged: null,\r\n    sendSignInLinkToEmail: null,\r\n    sendPasswordResetEmail: null,\r\n    setPersistence: null,\r\n    signInAndRetrieveDataWithCredential: null,\r\n    signInAnonymously: null,\r\n    signInWithCredential: null,\r\n    signInWithCustomToken: null,\r\n    signInWithEmailAndPassword: null,\r\n    signInWithPhoneNumber: null,\r\n    signInWithEmailLink: null,\r\n    signInWithPopup: null,\r\n    signInWithRedirect: null,\r\n    signOut: null,\r\n    tenantId: null,\r\n    updateCurrentUser: null,\r\n    useDeviceLanguage: null,\r\n    useEmulator: null,\r\n    verifyPasswordResetCode: null,\r\n};\r\n\r\nconst USE_EMULATOR = new InjectionToken('angularfire2.auth.use-emulator');\r\nconst SETTINGS = new InjectionToken('angularfire2.auth.settings');\r\nconst TENANT_ID = new InjectionToken('angularfire2.auth.tenant-id');\r\nconst LANGUAGE_CODE = new InjectionToken('angularfire2.auth.langugage-code');\r\nconst USE_DEVICE_LANGUAGE = new InjectionToken('angularfire2.auth.use-device-language');\r\nconst PERSISTENCE = new InjectionToken('angularfire.auth.persistence');\r\nconst ɵauthFactory = (app, zone, useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence) => ɵcacheInstance(`${app.name}.auth`, 'AngularFireAuth', app.name, () => {\r\n    const auth = zone.runOutsideAngular(() => app.auth());\r\n    if (useEmulator) {\r\n        auth.useEmulator(...useEmulator);\r\n    }\r\n    if (tenantId) {\r\n        auth.tenantId = tenantId;\r\n    }\r\n    auth.languageCode = languageCode;\r\n    if (useDeviceLanguage) {\r\n        auth.useDeviceLanguage();\r\n    }\r\n    if (settings) {\r\n        for (const [k, v] of Object.entries(settings)) {\r\n            auth.settings[k] = v;\r\n        }\r\n    }\r\n    if (persistence) {\r\n        auth.setPersistence(persistence);\r\n    }\r\n    return auth;\r\n}, [useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence]);\r\nclass AngularFireAuth {\r\n    constructor(options, name, \r\n    // tslint:disable-next-line:ban-types\r\n    platformId, zone, schedulers, useEmulator, // can't use the tuple here\r\n    settings, // can't use firebase.auth.AuthSettings here\r\n    tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\r\n        const logins = new Subject();\r\n        const auth = of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap(() => zone.runOutsideAngular(() => import('firebase/compat/auth'))), map(() => ɵfirebaseAppFactory(options, zone, name)), map(app => ɵauthFactory(app, zone, useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence)), shareReplay({ bufferSize: 1, refCount: false }));\r\n        if (isPlatformServer(platformId)) {\r\n            this.authState = this.user = this.idToken = this.idTokenResult = this.credential = of(null);\r\n        }\r\n        else {\r\n            // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\r\n            //       (e.g, `import { auth } from 'firebase/compat/app'`) are getting an undefined auth object unexpectedly\r\n            //       as we're completely lazy. Let's eagerly load the Auth SDK here.\r\n            //       There could potentially be race conditions still... but this greatly decreases the odds while\r\n            //       we reevaluate the API.\r\n            const _ = auth.pipe(first()).subscribe();\r\n            const redirectResult = auth.pipe(switchMap(auth => auth.getRedirectResult().then(it => it, () => null)), keepUnstableUntilFirst, shareReplay({ bufferSize: 1, refCount: false }));\r\n            const authStateChanged = auth.pipe(switchMap(auth => new Observable(sub => ({ unsubscribe: zone.runOutsideAngular(() => auth.onAuthStateChanged(next => sub.next(next), err => sub.error(err), () => sub.complete())) }))));\r\n            const idTokenChanged = auth.pipe(switchMap(auth => new Observable(sub => ({ unsubscribe: zone.runOutsideAngular(() => auth.onIdTokenChanged(next => sub.next(next), err => sub.error(err), () => sub.complete())) }))));\r\n            this.authState = redirectResult.pipe(switchMapTo(authStateChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\r\n            this.user = redirectResult.pipe(switchMapTo(idTokenChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\r\n            this.idToken = this.user.pipe(switchMap(user => user ? from(user.getIdToken()) : of(null)));\r\n            this.idTokenResult = this.user.pipe(switchMap(user => user ? from(user.getIdTokenResult()) : of(null)));\r\n            this.credential = merge(redirectResult, logins, \r\n            // pipe in null authState to make credential zipable, just a weird devexp if\r\n            // authState and user go null to still have a credential\r\n            this.authState.pipe(filter(it => !it))).pipe(\r\n            // handle the { user: { } } when a user is already logged in, rather have null\r\n            // TODO handle the type corcersion better\r\n            map(credential => (credential === null || credential === void 0 ? void 0 : credential.user) ? credential : null), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\r\n        }\r\n        return ɵlazySDKProxy(this, auth, zone, { spy: {\r\n                apply: (name, _, val) => {\r\n                    // If they call a signIn or createUser function listen into the promise\r\n                    // this will give us the user credential, push onto the logins Subject\r\n                    // to be consumed in .credential\r\n                    if (name.startsWith('signIn') || name.startsWith('createUser')) {\r\n                        // TODO fix the types, the trouble is UserCredential has everything optional\r\n                        val.then((user) => logins.next(user));\r\n                    }\r\n                }\r\n            } });\r\n    }\r\n}\r\nAngularFireAuth.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuth, deps: [{ token: FIREBASE_OPTIONS }, { token: FIREBASE_APP_NAME, optional: true }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: i1.ɵAngularFireSchedulers }, { token: USE_EMULATOR, optional: true }, { token: SETTINGS, optional: true }, { token: TENANT_ID, optional: true }, { token: LANGUAGE_CODE, optional: true }, { token: USE_DEVICE_LANGUAGE, optional: true }, { token: PERSISTENCE, optional: true }, { token: i2.AppCheckInstances, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nAngularFireAuth.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuth, providedIn: 'any' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuth, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'any'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [FIREBASE_OPTIONS]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [FIREBASE_APP_NAME]\r\n                }] }, { type: Object, decorators: [{\r\n                    type: Inject,\r\n                    args: [PLATFORM_ID]\r\n                }] }, { type: i0.NgZone }, { type: i1.ɵAngularFireSchedulers }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [USE_EMULATOR]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [SETTINGS]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [TENANT_ID]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [LANGUAGE_CODE]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [USE_DEVICE_LANGUAGE]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [PERSISTENCE]\r\n                }] }, { type: i2.AppCheckInstances, decorators: [{\r\n                    type: Optional\r\n                }] }]; } });\r\nɵapplyMixins(AngularFireAuth, [proxyPolyfillCompat]);\r\n\r\nclass AngularFireAuthModule {\r\n    constructor() {\r\n        firebase.registerVersion('angularfire', VERSION.full, 'auth-compat');\r\n    }\r\n}\r\nAngularFireAuthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nAngularFireAuthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthModule });\r\nAngularFireAuthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthModule, providers: [AngularFireAuth] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    providers: [AngularFireAuth]\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { AngularFireAuth, AngularFireAuthModule, LANGUAGE_CODE, PERSISTENCE, SETTINGS, TENANT_ID, USE_DEVICE_LANGUAGE, USE_EMULATOR, ɵauthFactory };\r\n\n"]},"metadata":{},"sourceType":"module"}