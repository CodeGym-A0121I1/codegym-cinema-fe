{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Subject_1 = require(\"../Subject\");\n\nvar async_1 = require(\"../scheduler/async\");\n\nvar Subscriber_1 = require(\"../Subscriber\");\n\nvar isNumeric_1 = require(\"../util/isNumeric\");\n\nvar isScheduler_1 = require(\"../util/isScheduler\");\n\nfunction windowTime(windowTimeSpan) {\n  var scheduler = async_1.async;\n  var windowCreationInterval = null;\n  var maxWindowSize = Number.POSITIVE_INFINITY;\n\n  if (isScheduler_1.isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler_1.isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric_1.isNumeric(arguments[2])) {\n    maxWindowSize = Number(arguments[2]);\n  }\n\n  if (isScheduler_1.isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric_1.isNumeric(arguments[1])) {\n    windowCreationInterval = Number(arguments[1]);\n  }\n\n  return function windowTimeOperatorFunction(source) {\n    return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nexports.windowTime = windowTime;\n\nvar WindowTimeOperator = function () {\n  function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n    this.windowTimeSpan = windowTimeSpan;\n    this.windowCreationInterval = windowCreationInterval;\n    this.maxWindowSize = maxWindowSize;\n    this.scheduler = scheduler;\n  }\n\n  WindowTimeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n  };\n\n  return WindowTimeOperator;\n}();\n\nvar CountedSubject = function (_super) {\n  __extends(CountedSubject, _super);\n\n  function CountedSubject() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._numberOfNextedValues = 0;\n    return _this;\n  }\n\n  CountedSubject.prototype.next = function (value) {\n    this._numberOfNextedValues++;\n\n    _super.prototype.next.call(this, value);\n  };\n\n  Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n    get: function () {\n      return this._numberOfNextedValues;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CountedSubject;\n}(Subject_1.Subject);\n\nvar WindowTimeSubscriber = function (_super) {\n  __extends(WindowTimeSubscriber, _super);\n\n  function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.destination = destination;\n    _this.windowTimeSpan = windowTimeSpan;\n    _this.windowCreationInterval = windowCreationInterval;\n    _this.maxWindowSize = maxWindowSize;\n    _this.scheduler = scheduler;\n    _this.windows = [];\n\n    var window = _this.openWindow();\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      var closeState = {\n        subscriber: _this,\n        window: window,\n        context: null\n      };\n      var creationState = {\n        windowTimeSpan: windowTimeSpan,\n        windowCreationInterval: windowCreationInterval,\n        subscriber: _this,\n        scheduler: scheduler\n      };\n\n      _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n\n      _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      var timeSpanOnlyState = {\n        subscriber: _this,\n        window: window,\n        windowTimeSpan: windowTimeSpan\n      };\n\n      _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n\n    return _this;\n  }\n\n  WindowTimeSubscriber.prototype._next = function (value) {\n    var windows = this.windows;\n    var len = windows.length;\n\n    for (var i = 0; i < len; i++) {\n      var window_1 = windows[i];\n\n      if (!window_1.closed) {\n        window_1.next(value);\n\n        if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window_1);\n        }\n      }\n    }\n  };\n\n  WindowTimeSubscriber.prototype._error = function (err) {\n    var windows = this.windows;\n\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n\n    this.destination.error(err);\n  };\n\n  WindowTimeSubscriber.prototype._complete = function () {\n    var windows = this.windows;\n\n    while (windows.length > 0) {\n      var window_2 = windows.shift();\n\n      if (!window_2.closed) {\n        window_2.complete();\n      }\n    }\n\n    this.destination.complete();\n  };\n\n  WindowTimeSubscriber.prototype.openWindow = function () {\n    var window = new CountedSubject();\n    this.windows.push(window);\n    var destination = this.destination;\n    destination.next(window);\n    return window;\n  };\n\n  WindowTimeSubscriber.prototype.closeWindow = function (window) {\n    window.complete();\n    var windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  };\n\n  return WindowTimeSubscriber;\n}(Subscriber_1.Subscriber);\n\nfunction dispatchWindowTimeSpanOnly(state) {\n  var subscriber = state.subscriber,\n      windowTimeSpan = state.windowTimeSpan,\n      window = state.window;\n\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation(state) {\n  var windowTimeSpan = state.windowTimeSpan,\n      subscriber = state.subscriber,\n      scheduler = state.scheduler,\n      windowCreationInterval = state.windowCreationInterval;\n  var window = subscriber.openWindow();\n  var action = this;\n  var context = {\n    action: action,\n    subscription: null\n  };\n  var timeSpanState = {\n    subscriber: subscriber,\n    window: window,\n    context: context\n  };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose(state) {\n  var subscriber = state.subscriber,\n      window = state.window,\n      context = state.context;\n\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n\n  subscriber.closeWindow(window);\n}","map":{"version":3,"sources":["C:/Users/SQ/OneDrive/Documents/GitHub/codegym-cinema-fe/node_modules/rxjs/internal/operators/windowTime.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","Subject_1","require","async_1","Subscriber_1","isNumeric_1","isScheduler_1","windowTime","windowTimeSpan","scheduler","async","windowCreationInterval","maxWindowSize","Number","POSITIVE_INFINITY","isScheduler","arguments","isNumeric","windowTimeOperatorFunction","source","lift","WindowTimeOperator","call","subscriber","subscribe","WindowTimeSubscriber","CountedSubject","_super","_this","apply","_numberOfNextedValues","next","get","enumerable","configurable","Subject","destination","windows","window","openWindow","closeState","context","creationState","add","schedule","dispatchWindowClose","dispatchWindowCreation","timeSpanOnlyState","dispatchWindowTimeSpanOnly","_next","len","length","i","window_1","closed","numberOfNextedValues","closeWindow","_error","err","shift","error","_complete","window_2","complete","push","splice","indexOf","Subscriber","state","action","subscription","timeSpanState","remove"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = require(\"../Subject\");\nvar async_1 = require(\"../scheduler/async\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar isNumeric_1 = require(\"../util/isNumeric\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nfunction windowTime(windowTimeSpan) {\n    var scheduler = async_1.async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric_1.isNumeric(arguments[2])) {\n        maxWindowSize = Number(arguments[2]);\n    }\n    if (isScheduler_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric_1.isNumeric(arguments[1])) {\n        windowCreationInterval = Number(arguments[1]);\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nexports.windowTime = windowTime;\nvar WindowTimeOperator = (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = (function (_super) {\n    __extends(CountedSubject, _super);\n    function CountedSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._numberOfNextedValues = 0;\n        return _this;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject_1.Subject));\nvar WindowTimeSubscriber = (function (_super) {\n    __extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowTimeSpan = windowTimeSpan;\n        _this.windowCreationInterval = windowCreationInterval;\n        _this.maxWindowSize = maxWindowSize;\n        _this.scheduler = scheduler;\n        _this.windows = [];\n        var window = _this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: _this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };\n            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n        return _this;\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n"]},"metadata":{},"sourceType":"script"}