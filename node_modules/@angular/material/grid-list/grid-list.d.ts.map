{"version":3,"file":"grid-list.d.ts","sources":["grid-list.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { AfterContentChecked, OnInit, QueryList, ElementRef } from '@angular/core';\r\nimport { MatGridTile } from './grid-tile';\r\nimport { TileStyleTarget } from './tile-styler';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { NumberInput } from '@angular/cdk/coercion';\r\nimport { MatGridListBase } from './grid-list-base';\r\nexport declare class MatGridList implements MatGridListBase, OnInit, AfterContentChecked, TileStyleTarget {\r\n    private _element;\r\n    private _dir;\r\n    /** Number of columns being rendered. */\r\n    private _cols;\r\n    /** Used for determiningthe position of each tile in the grid. */\r\n    private _tileCoordinator;\r\n    /**\r\n     * Row height value passed in by user. This can be one of three types:\r\n     * - Number value (ex: \"100px\"):  sets a fixed row height to that value\r\n     * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\r\n     * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\r\n     */\r\n    private _rowHeight;\r\n    /** The amount of space between tiles. This will be something like '5px' or '2em'. */\r\n    private _gutter;\r\n    /** Sets position and size styles for a tile */\r\n    private _tileStyler;\r\n    /** Query list of tiles that are being rendered. */\r\n    _tiles: QueryList<MatGridTile>;\r\n    constructor(_element: ElementRef<HTMLElement>, _dir: Directionality);\r\n    /** Amount of columns in the grid list. */\r\n    get cols(): number;\r\n    set cols(value: number);\r\n    /** Size of the grid list's gutter in pixels. */\r\n    get gutterSize(): string;\r\n    set gutterSize(value: string);\r\n    /** Set internal representation of row height from the user-provided value. */\r\n    get rowHeight(): string | number;\r\n    set rowHeight(value: string | number);\r\n    ngOnInit(): void;\r\n    /**\r\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\r\n     * to run it frequently.\r\n     */\r\n    ngAfterContentChecked(): void;\r\n    /** Throw a friendly error if cols property is missing */\r\n    private _checkCols;\r\n    /** Default to equal width:height if rowHeight property is missing */\r\n    private _checkRowHeight;\r\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\r\n    private _setTileStyler;\r\n    /** Computes and applies the size and position for all children grid tiles. */\r\n    private _layoutTiles;\r\n    /** Sets style on the main grid-list element, given the style name and value. */\r\n    _setListStyle(style: [string, string | null] | null): void;\r\n    static ngAcceptInputType_cols: NumberInput;\r\n}\r\n"]}